DOWNLOAD_URL = "ftp://ftp.ci.austin.tx.us/GIS-Data/Regional/regional/facilities.zip"
ZIPFILE = "facilities.zip"

UNPACKED_FILES_PATTERN = "facilities.*"
SHAPEFILE_NAME = "facilities"

TABLENAME = "austin_ci_tx_us_facilities"
SRID = "2277"

require "../../../rake-defs.rb"


###########################################################################

task :default => [ZIPFILE] 
  
file ZIPFILE do |t|
  sh("wget", "-O", t.name, DOWNLOAD_URL)
end


###########################################################################

task :load => [:load_check_table, :load_database, :clean]
 
task :load_check_table do
  raise "Load aborted: table #{TABLENAME} already exists" if FindIt::RakeDefs.db_table_exists?(TABLENAME)
end

file "#{SHAPEFILE_NAME}.shp" => [ZIPFILE] do
  sh('unzip', '-DD', ZIPFILE) 
end

task :load_database  => ["#{SHAPEFILE_NAME}.shp" ] do
  FindIt::RakeDefs.db_load_shapefile(TABLENAME, SHAPEFILE_NAME, SRID)
  FindIt::RakeDefs.db_create_index(TABLENAME, "the_geom", "gist")
  FindIt::RakeDefs.db_create_index(TABLENAME, "facility", "hash")
  FindIt::RakeDefs.db_vacuum(TABLENAME)  
end


###########################################################################

task :clean do
  rm(Dir.glob(UNPACKED_FILES_PATTERN) - [ZIPFILE])
end


###########################################################################

task :clobber => [:clobber_files, :clobber_database]
  
task :clobber_database do
  db_drop_table(TABLENAME) if db_table_exists?(TABLENAME)
end

task :clobber_files => [:clean] do
  rm(ZIPFILE)
end
